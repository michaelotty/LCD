

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Apr 11 15:31:06 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F84A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x4E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  0081                     	;# 
    31  0085                     	;# 
    32  0086                     	;# 
    33  0088                     	;# 
    34  0089                     	;# 
    35  0000                     	;# 
    36  0001                     	;# 
    37  0002                     	;# 
    38  0003                     	;# 
    39  0004                     	;# 
    40  0005                     	;# 
    41  0006                     	;# 
    42  0008                     	;# 
    43  0009                     	;# 
    44  000A                     	;# 
    45  000B                     	;# 
    46  0081                     	;# 
    47  0085                     	;# 
    48  0086                     	;# 
    49  0088                     	;# 
    50  0089                     	;# 
    51  0030                     _RB0	set	48
    52  0031                     _RB1	set	49
    53  0032                     _RB2	set	50
    54  0033                     _RB3	set	51
    55  0034                     _RB4	set	52
    56  0035                     _RB5	set	53
    57  0036                     _RB6	set	54
    58  0086                     _TRISB	set	134
    59                           
    60                           ; #config settings
    61  0000                     
    62                           	psect	cinit
    63  03FE                     start_initialization:	
    64  03FE                     __initialization:	
    65  03FE                     end_of_initialization:	
    66                           ;End of C runtime variable initialization code
    67                           
    68  03FE                     __end_of__initialization:	
    69  03FE  0183               	clrf	3
    70  03FF  2A69               	ljmp	_main	;jump to C main() function
    71                           
    72                           	psect	cstackCOMMON
    73  0000                     __pcstackCOMMON:	
    74  0000                     ??_Lcd_Write_Int:	
    75  0000                     ??_Lcd_Port:	
    76                           ; 0 bytes @ 0x0
    77                           
    78                           
    79                           	psect	cstackBANK0
    80  000C                     __pcstackBANK0:	
    81                           ; 0 bytes @ 0x0
    82                           
    83  000C                     ?_Lcd_Init:	
    84  000C                     ?_main:	
    85                           ; 0 bytes @ 0x0
    86                           
    87  000C                     ?_Lcd_Port:	
    88                           ; 0 bytes @ 0x0
    89                           
    90  000C                     ?_Lcd_Cmd:	
    91                           ; 0 bytes @ 0x0
    92                           
    93  000C                     ?_Lcd_Write_Char:	
    94                           ; 0 bytes @ 0x0
    95                           
    96  000C                     ?_Lcd_Write_String:	
    97                           ; 0 bytes @ 0x0
    98                           
    99  000C                     ?___lwdiv:	
   100                           ; 0 bytes @ 0x0
   101                           
   102  000C                     ?___lwmod:	
   103                           ; 2 bytes @ 0x0
   104                           
   105  000C                     Lcd_Port@a:	
   106                           ; 2 bytes @ 0x0
   107                           
   108  000C                     ___lwdiv@divisor:	
   109                           ; 1 bytes @ 0x0
   110                           
   111  000C                     ___lwmod@divisor:	
   112                           ; 2 bytes @ 0x0
   113                           
   114                           
   115                           ; 2 bytes @ 0x0
   116  000C                     	ds	1
   117  000D                     ??_Lcd_Cmd:	
   118  000D                     ??_Lcd_Write_Char:	
   119                           ; 0 bytes @ 0x1
   120                           
   121                           
   122                           ; 0 bytes @ 0x1
   123  000D                     	ds	1
   124  000E                     Lcd_Write_Char@temp:	
   125  000E                     ___lwdiv@dividend:	
   126                           ; 1 bytes @ 0x2
   127                           
   128  000E                     ___lwmod@dividend:	
   129                           ; 2 bytes @ 0x2
   130                           
   131                           
   132                           ; 2 bytes @ 0x2
   133  000E                     	ds	1
   134  000F                     Lcd_Cmd@a:	
   135  000F                     Lcd_Write_Char@y:	
   136                           ; 1 bytes @ 0x3
   137                           
   138                           
   139                           ; 1 bytes @ 0x3
   140  000F                     	ds	1
   141  0010                     ??_Lcd_Init:	
   142  0010                     ?_Lcd_Set_Cursor:	
   143                           ; 0 bytes @ 0x4
   144                           
   145  0010                     ??___lwdiv:	
   146                           ; 0 bytes @ 0x4
   147                           
   148  0010                     ??___lwmod:	
   149                           ; 0 bytes @ 0x4
   150                           
   151  0010                     Lcd_Set_Cursor@b:	
   152                           ; 0 bytes @ 0x4
   153                           
   154  0010                     Lcd_Write_Char@a:	
   155                           ; 1 bytes @ 0x4
   156                           
   157                           
   158                           ; 1 bytes @ 0x4
   159  0010                     	ds	1
   160  0011                     ??_Lcd_Set_Cursor:	
   161  0011                     ??_Lcd_Write_String:	
   162                           ; 0 bytes @ 0x5
   163                           
   164  0011                     ___lwmod@counter:	
   165                           ; 0 bytes @ 0x5
   166                           
   167  0011                     ___lwdiv@quotient:	
   168                           ; 1 bytes @ 0x5
   169                           
   170                           
   171                           ; 2 bytes @ 0x5
   172  0011                     	ds	1
   173  0012                     Lcd_Write_String@i:	
   174                           
   175                           ; 2 bytes @ 0x6
   176  0012                     	ds	1
   177  0013                     Lcd_Set_Cursor@a:	
   178  0013                     ___lwdiv@counter:	
   179                           ; 1 bytes @ 0x7
   180                           
   181                           
   182                           ; 1 bytes @ 0x7
   183  0013                     	ds	1
   184  0014                     ?_utoa:	
   185  0014                     Lcd_Set_Cursor@z:	
   186                           ; 1 bytes @ 0x8
   187                           
   188  0014                     Lcd_Write_String@a:	
   189                           ; 1 bytes @ 0x8
   190                           
   191  0014                     utoa@val:	
   192                           ; 1 bytes @ 0x8
   193                           
   194                           
   195                           ; 2 bytes @ 0x8
   196  0014                     	ds	1
   197  0015                     Lcd_Set_Cursor@y:	
   198                           
   199                           ; 1 bytes @ 0x9
   200  0015                     	ds	1
   201  0016                     Lcd_Set_Cursor@temp:	
   202  0016                     utoa@base:	
   203                           ; 1 bytes @ 0xA
   204                           
   205                           
   206                           ; 2 bytes @ 0xA
   207  0016                     	ds	2
   208  0018                     ??_utoa:	
   209                           
   210                           ; 0 bytes @ 0xC
   211  0018                     	ds	1
   212  0019                     utoa@v:	
   213                           
   214                           ; 2 bytes @ 0xD
   215  0019                     	ds	2
   216  001B                     utoa@c:	
   217                           
   218                           ; 1 bytes @ 0xF
   219  001B                     	ds	1
   220  001C                     utoa@buf:	
   221                           
   222                           ; 1 bytes @ 0x10
   223  001C                     	ds	1
   224  001D                     ?_Lcd_Write_Int:	
   225  001D                     Lcd_Write_Int@a:	
   226                           ; 0 bytes @ 0x11
   227                           
   228                           
   229                           ; 2 bytes @ 0x11
   230  001D                     	ds	2
   231  001F                     Lcd_Write_Int@temp:	
   232                           
   233                           ; 16 bytes @ 0x13
   234  001F                     	ds	16
   235  002F                     ??_main:	
   236                           
   237                           ; 0 bytes @ 0x23
   238  002F                     	ds	3
   239  0032                     main@counter:	
   240                           
   241                           ; 2 bytes @ 0x26
   242  0032                     	ds	2
   243                           
   244                           	psect	maintext
   245  0269                     __pmaintext:	
   246 ;;
   247 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   248 ;;
   249 ;; *************** function _main *****************
   250 ;; Defined at:
   251 ;;		line 12 in file "main.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;  counter         2   38[BANK0 ] unsigned int 
   256 ;; Return value:  Size  Location     Type
   257 ;;		None               void
   258 ;; Registers used:
   259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   260 ;; Tracked objects:
   261 ;;		On entry : B00/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMMON   BANK0
   265 ;;      Params:         0       0
   266 ;;      Locals:         0       2
   267 ;;      Temps:          0       3
   268 ;;      Totals:         0       5
   269 ;;Total ram usage:        5 bytes
   270 ;; Hardware stack levels required when called:    4
   271 ;; This function calls:
   272 ;;		_Lcd_Init
   273 ;;		_Lcd_Set_Cursor
   274 ;;		_Lcd_Write_Int
   275 ;; This function is called by:
   276 ;;		Startup code after reset
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           
   281                           ;psect for function _main
   282  0269                     _main:	
   283                           
   284                           ;main.c: 13: unsigned int counter = 0;
   285                           
   286                           ;incstack = 0
   287                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   288  0269  1283               	bcf	3,5	;RP0=0, select bank0
   289  026A  01B2               	clrf	main@counter
   290  026B  01B3               	clrf	main@counter+1
   291                           
   292                           ;main.c: 14: TRISB = 0x00;
   293  026C  1683               	bsf	3,5	;RP0=1, select bank1
   294  026D  0186               	clrf	6	;volatile
   295                           
   296                           ;main.c: 17: RB5 = 0;
   297  026E  1283               	bcf	3,5	;RP0=0, select bank0
   298  026F  1286               	bcf	6,5	;volatile
   299                           
   300                           ;main.c: 19: Lcd_Init();
   301  0270  22EF               	fcall	_Lcd_Init
   302  0271                     l896:	
   303                           ;main.c: 21: while(1) {
   304                           
   305                           
   306                           ;main.c: 23: Lcd_Set_Cursor(1,1);
   307  0271  1283               	bcf	3,5	;RP0=0, select bank0
   308  0272  0190               	clrf	Lcd_Set_Cursor@b
   309  0273  0A90               	incf	Lcd_Set_Cursor@b,f
   310  0274  3001               	movlw	1
   311  0275  2360               	fcall	_Lcd_Set_Cursor
   312                           
   313                           ;main.c: 27: Lcd_Write_Int(counter);
   314  0276  1283               	bcf	3,5	;RP0=0, select bank0
   315  0277  0833               	movf	main@counter+1,w
   316  0278  009E               	movwf	Lcd_Write_Int@a+1
   317  0279  0832               	movf	main@counter,w
   318  027A  009D               	movwf	Lcd_Write_Int@a
   319  027B  2214               	fcall	_Lcd_Write_Int
   320                           
   321                           ;main.c: 28: _delay((unsigned long)((1000)*(4000000/4000.0)));
   322  027C  3006               	movlw	6
   323  027D  1283               	bcf	3,5	;RP0=0, select bank0
   324  027E  00B1               	movwf	??_main+2
   325  027F  3013               	movlw	19
   326  0280  00B0               	movwf	??_main+1
   327  0281  30B1               	movlw	177
   328  0282  00AF               	movwf	??_main
   329  0283                     u537:	
   330  0283  0BAF               	decfsz	??_main,f
   331  0284  2A83               	goto	u537
   332  0285  0BB0               	decfsz	??_main+1,f
   333  0286  2A83               	goto	u537
   334  0287  0BB1               	decfsz	??_main+2,f
   335  0288  2A83               	goto	u537
   336  0289  2A8A               	nop2
   337                           
   338                           ;main.c: 29: counter++;
   339  028A  3001               	movlw	1
   340  028B  1283               	bcf	3,5	;RP0=0, select bank0
   341  028C  07B2               	addwf	main@counter,f
   342  028D  1803               	skipnc
   343  028E  0AB3               	incf	main@counter+1,f
   344  028F  3000               	movlw	0
   345  0290  07B3               	addwf	main@counter+1,f
   346  0291  2A71               	goto	l896
   347  0292                     __end_of_main:	
   348                           ;main.c: 30: }
   349                           ;main.c: 31: return;
   350                           
   351                           
   352                           	psect	text1
   353  0214                     __ptext1:	
   354 ;; *************** function _Lcd_Write_Int *****************
   355 ;; Defined at:
   356 ;;		line 117 in file "lcd.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;  a               2   17[BANK0 ] unsigned int 
   359 ;; Auto vars:     Size  Location     Type
   360 ;;  temp           16   19[BANK0 ] unsigned char [16]
   361 ;; Return value:  Size  Location     Type
   362 ;;		None               void
   363 ;; Registers used:
   364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMMON   BANK0
   370 ;;      Params:         0       2
   371 ;;      Locals:         0      16
   372 ;;      Temps:          0       0
   373 ;;      Totals:         0      18
   374 ;;Total ram usage:       18 bytes
   375 ;; Hardware stack levels used:    1
   376 ;; Hardware stack levels required when called:    3
   377 ;; This function calls:
   378 ;;		_Lcd_Write_String
   379 ;;		_utoa
   380 ;; This function is called by:
   381 ;;		_main
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           
   386                           ;psect for function _Lcd_Write_Int
   387  0214                     _Lcd_Write_Int:	
   388                           
   389                           ;lcd.c: 119: char temp[16];
   390                           ;lcd.c: 120: utoa((char*)temp, a, 10);
   391                           
   392                           ;incstack = 0
   393                           ; Regs used in _Lcd_Write_Int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   394  0214  1283               	bcf	3,5	;RP0=0, select bank0
   395  0215  081E               	movf	Lcd_Write_Int@a+1,w
   396  0216  0095               	movwf	utoa@val+1
   397  0217  081D               	movf	Lcd_Write_Int@a,w
   398  0218  0094               	movwf	utoa@val
   399  0219  300A               	movlw	10
   400  021A  0096               	movwf	utoa@base
   401  021B  3000               	movlw	0
   402  021C  0097               	movwf	utoa@base+1
   403  021D  301F               	movlw	(low (Lcd_Write_Int@temp| 0))& (0+255)
   404  021E  23A2               	fcall	_utoa
   405                           
   406                           ;lcd.c: 121: Lcd_Write_String(temp);
   407  021F  301F               	movlw	(low (Lcd_Write_Int@temp| 0))& (0+255)
   408  0220  224C               	fcall	_Lcd_Write_String
   409  0221  0008               	return
   410  0222                     __end_of_Lcd_Write_Int:	
   411                           
   412                           	psect	text2
   413  03A2                     __ptext2:	
   414 ;; *************** function _utoa *****************
   415 ;; Defined at:
   416 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;  buf             1    wreg     PTR unsigned char 
   419 ;;		 -> Lcd_Write_Int@temp(16), 
   420 ;;  val             2    8[BANK0 ] unsigned int 
   421 ;;  base            2   10[BANK0 ] int 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;  buf             1   16[BANK0 ] PTR unsigned char 
   424 ;;		 -> Lcd_Write_Int@temp(16), 
   425 ;;  v               2   13[BANK0 ] unsigned int 
   426 ;;  c               1   15[BANK0 ] unsigned char 
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      PTR unsigned char 
   429 ;; Registers used:
   430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0
   436 ;;      Params:         0       4
   437 ;;      Locals:         0       4
   438 ;;      Temps:          0       1
   439 ;;      Totals:         0       9
   440 ;;Total ram usage:        9 bytes
   441 ;; Hardware stack levels used:    1
   442 ;; Hardware stack levels required when called:    1
   443 ;; This function calls:
   444 ;;		___lwdiv
   445 ;;		___lwmod
   446 ;; This function is called by:
   447 ;;		_Lcd_Write_Int
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           
   452                           ;psect for function _utoa
   453  03A2                     _utoa:	
   454                           
   455                           ;incstack = 0
   456                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   457                           ;utoa@buf stored from wreg
   458  03A2  1283               	bcf	3,5	;RP0=0, select bank0
   459  03A3  009C               	movwf	utoa@buf
   460  03A4  0815               	movf	utoa@val+1,w
   461  03A5  009A               	movwf	utoa@v+1
   462  03A6  0814               	movf	utoa@val,w
   463  03A7  0099               	movwf	utoa@v
   464  03A8                     l830:	
   465  03A8  0817               	movf	utoa@base+1,w
   466  03A9  008D               	movwf	___lwdiv@divisor+1
   467  03AA  0816               	movf	utoa@base,w
   468  03AB  008C               	movwf	___lwdiv@divisor
   469  03AC  081A               	movf	utoa@v+1,w
   470  03AD  008F               	movwf	___lwdiv@dividend+1
   471  03AE  0819               	movf	utoa@v,w
   472  03AF  008E               	movwf	___lwdiv@dividend
   473  03B0  2323               	fcall	___lwdiv
   474  03B1  1283               	bcf	3,5	;RP0=0, select bank0
   475  03B2  080D               	movf	?___lwdiv+1,w
   476  03B3  009A               	movwf	utoa@v+1
   477  03B4  080C               	movf	?___lwdiv,w
   478  03B5  0099               	movwf	utoa@v
   479  03B6  3001               	movlw	1
   480  03B7  0098               	movwf	??_utoa
   481  03B8  0818               	movf	??_utoa,w
   482  03B9  079C               	addwf	utoa@buf,f
   483  03BA  0819               	movf	utoa@v,w
   484  03BB  041A               	iorwf	utoa@v+1,w
   485  03BC  1D03               	btfss	3,2
   486  03BD  2BA8               	goto	l830
   487  03BE  081C               	movf	utoa@buf,w
   488  03BF  0084               	movwf	4
   489  03C0  1383               	bcf	3,7	;select IRP bank0
   490  03C1  0180               	clrf	0
   491  03C2  3001               	movlw	1
   492  03C3  029C               	subwf	utoa@buf,f
   493  03C4                     l840:	
   494  03C4  0817               	movf	utoa@base+1,w
   495  03C5  008D               	movwf	___lwmod@divisor+1
   496  03C6  0816               	movf	utoa@base,w
   497  03C7  008C               	movwf	___lwmod@divisor
   498  03C8  0815               	movf	utoa@val+1,w
   499  03C9  008F               	movwf	___lwmod@dividend+1
   500  03CA  0814               	movf	utoa@val,w
   501  03CB  008E               	movwf	___lwmod@dividend
   502  03CC  22BC               	fcall	___lwmod
   503  03CD  1283               	bcf	3,5	;RP0=0, select bank0
   504  03CE  080C               	movf	?___lwmod,w
   505  03CF  0098               	movwf	??_utoa
   506  03D0  0818               	movf	??_utoa,w
   507  03D1  009B               	movwf	utoa@c
   508  03D2  0817               	movf	utoa@base+1,w
   509  03D3  008D               	movwf	___lwdiv@divisor+1
   510  03D4  0816               	movf	utoa@base,w
   511  03D5  008C               	movwf	___lwdiv@divisor
   512  03D6  0815               	movf	utoa@val+1,w
   513  03D7  008F               	movwf	___lwdiv@dividend+1
   514  03D8  0814               	movf	utoa@val,w
   515  03D9  008E               	movwf	___lwdiv@dividend
   516  03DA  2323               	fcall	___lwdiv
   517  03DB  1283               	bcf	3,5	;RP0=0, select bank0
   518  03DC  080D               	movf	?___lwdiv+1,w
   519  03DD  0095               	movwf	utoa@val+1
   520  03DE  080C               	movf	?___lwdiv,w
   521  03DF  0094               	movwf	utoa@val
   522  03E0  300A               	movlw	10
   523  03E1  021B               	subwf	utoa@c,w
   524  03E2  1C03               	skipc
   525  03E3  2BE8               	goto	l429
   526  03E4  3007               	movlw	7
   527  03E5  0098               	movwf	??_utoa
   528  03E6  0818               	movf	??_utoa,w
   529  03E7  079B               	addwf	utoa@c,f
   530  03E8                     l429:	
   531  03E8  3030               	movlw	48
   532  03E9  0098               	movwf	??_utoa
   533  03EA  0818               	movf	??_utoa,w
   534  03EB  079B               	addwf	utoa@c,f
   535  03EC  081B               	movf	utoa@c,w
   536  03ED  0098               	movwf	??_utoa
   537  03EE  081C               	movf	utoa@buf,w
   538  03EF  0084               	movwf	4
   539  03F0  0818               	movf	??_utoa,w
   540  03F1  1383               	bcf	3,7	;select IRP bank0
   541  03F2  0080               	movwf	0
   542  03F3  3001               	movlw	1
   543  03F4  029C               	subwf	utoa@buf,f
   544  03F5  0814               	movf	utoa@val,w
   545  03F6  0415               	iorwf	utoa@val+1,w
   546  03F7  1D03               	btfss	3,2
   547  03F8  2BC4               	goto	l840
   548                           
   549                           ;	Return value of _utoa is never used
   550  03F9  3001               	movlw	1
   551  03FA  0098               	movwf	??_utoa
   552  03FB  0818               	movf	??_utoa,w
   553  03FC  079C               	addwf	utoa@buf,f
   554  03FD  0008               	return
   555  03FE                     __end_of_utoa:	
   556                           
   557                           	psect	text3
   558  02BC                     __ptext3:	
   559 ;; *************** function ___lwmod *****************
   560 ;; Defined at:
   561 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;  divisor         2    0[BANK0 ] unsigned int 
   564 ;;  dividend        2    2[BANK0 ] unsigned int 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  counter         1    5[BANK0 ] unsigned char 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  2    0[BANK0 ] unsigned int 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0
   576 ;;      Params:         0       4
   577 ;;      Locals:         0       1
   578 ;;      Temps:          0       1
   579 ;;      Totals:         0       6
   580 ;;Total ram usage:        6 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_utoa
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           
   590                           ;psect for function ___lwmod
   591  02BC                     ___lwmod:	
   592                           
   593                           ;incstack = 0
   594                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   595  02BC  1283               	bcf	3,5	;RP0=0, select bank0
   596  02BD  080C               	movf	___lwmod@divisor,w
   597  02BE  040D               	iorwf	___lwmod@divisor+1,w
   598  02BF  1903               	btfsc	3,2
   599  02C0  2AEA               	goto	l806
   600  02C1  0191               	clrf	___lwmod@counter
   601  02C2  0A91               	incf	___lwmod@counter,f
   602  02C3                     l796:	
   603  02C3  1B8D               	btfsc	___lwmod@divisor+1,7
   604  02C4  2AD1               	goto	l798
   605  02C5  3001               	movlw	1
   606  02C6                     u405:	
   607  02C6  1003               	clrc
   608  02C7  0D8C               	rlf	___lwmod@divisor,f
   609  02C8  0D8D               	rlf	___lwmod@divisor+1,f
   610  02C9  3EFF               	addlw	-1
   611  02CA  1D03               	skipz
   612  02CB  2AC6               	goto	u405
   613  02CC  3001               	movlw	1
   614  02CD  0090               	movwf	??___lwmod
   615  02CE  0810               	movf	??___lwmod,w
   616  02CF  0791               	addwf	___lwmod@counter,f
   617  02D0  2AC3               	goto	l796
   618  02D1                     l798:	
   619  02D1  080D               	movf	___lwmod@divisor+1,w
   620  02D2  020F               	subwf	___lwmod@dividend+1,w
   621  02D3  1D03               	skipz
   622  02D4  2AD7               	goto	u425
   623  02D5  080C               	movf	___lwmod@divisor,w
   624  02D6  020E               	subwf	___lwmod@dividend,w
   625  02D7                     u425:	
   626  02D7  1C03               	skipc
   627  02D8  2ADF               	goto	l802
   628  02D9  080C               	movf	___lwmod@divisor,w
   629  02DA  028E               	subwf	___lwmod@dividend,f
   630  02DB  080D               	movf	___lwmod@divisor+1,w
   631  02DC  1C03               	skipc
   632  02DD  038F               	decf	___lwmod@dividend+1,f
   633  02DE  028F               	subwf	___lwmod@dividend+1,f
   634  02DF                     l802:	
   635  02DF  3001               	movlw	1
   636  02E0                     u435:	
   637  02E0  1003               	clrc
   638  02E1  0C8D               	rrf	___lwmod@divisor+1,f
   639  02E2  0C8C               	rrf	___lwmod@divisor,f
   640  02E3  3EFF               	addlw	-1
   641  02E4  1D03               	skipz
   642  02E5  2AE0               	goto	u435
   643  02E6  3001               	movlw	1
   644  02E7  0291               	subwf	___lwmod@counter,f
   645  02E8  1D03               	btfss	3,2
   646  02E9  2AD1               	goto	l798
   647  02EA                     l806:	
   648  02EA  080F               	movf	___lwmod@dividend+1,w
   649  02EB  008D               	movwf	?___lwmod+1
   650  02EC  080E               	movf	___lwmod@dividend,w
   651  02ED  008C               	movwf	?___lwmod
   652  02EE  0008               	return
   653  02EF                     __end_of___lwmod:	
   654                           
   655                           	psect	text4
   656  0323                     __ptext4:	
   657 ;; *************** function ___lwdiv *****************
   658 ;; Defined at:
   659 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;  divisor         2    0[BANK0 ] unsigned int 
   662 ;;  dividend        2    2[BANK0 ] unsigned int 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  quotient        2    5[BANK0 ] unsigned int 
   665 ;;  counter         1    7[BANK0 ] unsigned char 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  2    0[BANK0 ] unsigned int 
   668 ;; Registers used:
   669 ;;		wreg, status,2, status,0
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0
   675 ;;      Params:         0       4
   676 ;;      Locals:         0       3
   677 ;;      Temps:          0       1
   678 ;;      Totals:         0       8
   679 ;;Total ram usage:        8 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_utoa
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function ___lwdiv
   690  0323                     ___lwdiv:	
   691                           
   692                           ;incstack = 0
   693                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   694  0323  1283               	bcf	3,5	;RP0=0, select bank0
   695  0324  0191               	clrf	___lwdiv@quotient
   696  0325  0192               	clrf	___lwdiv@quotient+1
   697  0326  080C               	movf	___lwdiv@divisor,w
   698  0327  040D               	iorwf	___lwdiv@divisor+1,w
   699  0328  1903               	btfsc	3,2
   700  0329  2B5B               	goto	l784
   701  032A  0193               	clrf	___lwdiv@counter
   702  032B  0A93               	incf	___lwdiv@counter,f
   703  032C                     l772:	
   704  032C  1B8D               	btfsc	___lwdiv@divisor+1,7
   705  032D  2B3A               	goto	l774
   706  032E  3001               	movlw	1
   707  032F                     u335:	
   708  032F  1003               	clrc
   709  0330  0D8C               	rlf	___lwdiv@divisor,f
   710  0331  0D8D               	rlf	___lwdiv@divisor+1,f
   711  0332  3EFF               	addlw	-1
   712  0333  1D03               	skipz
   713  0334  2B2F               	goto	u335
   714  0335  3001               	movlw	1
   715  0336  0090               	movwf	??___lwdiv
   716  0337  0810               	movf	??___lwdiv,w
   717  0338  0793               	addwf	___lwdiv@counter,f
   718  0339  2B2C               	goto	l772
   719  033A                     l774:	
   720  033A  3001               	movlw	1
   721  033B                     u355:	
   722  033B  1003               	clrc
   723  033C  0D91               	rlf	___lwdiv@quotient,f
   724  033D  0D92               	rlf	___lwdiv@quotient+1,f
   725  033E  3EFF               	addlw	-1
   726  033F  1D03               	skipz
   727  0340  2B3B               	goto	u355
   728  0341  080D               	movf	___lwdiv@divisor+1,w
   729  0342  020F               	subwf	___lwdiv@dividend+1,w
   730  0343  1D03               	skipz
   731  0344  2B47               	goto	u365
   732  0345  080C               	movf	___lwdiv@divisor,w
   733  0346  020E               	subwf	___lwdiv@dividend,w
   734  0347                     u365:	
   735  0347  1C03               	skipc
   736  0348  2B50               	goto	l780
   737  0349  080C               	movf	___lwdiv@divisor,w
   738  034A  028E               	subwf	___lwdiv@dividend,f
   739  034B  080D               	movf	___lwdiv@divisor+1,w
   740  034C  1C03               	skipc
   741  034D  038F               	decf	___lwdiv@dividend+1,f
   742  034E  028F               	subwf	___lwdiv@dividend+1,f
   743  034F  1411               	bsf	___lwdiv@quotient,0
   744  0350                     l780:	
   745  0350  3001               	movlw	1
   746  0351                     u375:	
   747  0351  1003               	clrc
   748  0352  0C8D               	rrf	___lwdiv@divisor+1,f
   749  0353  0C8C               	rrf	___lwdiv@divisor,f
   750  0354  3EFF               	addlw	-1
   751  0355  1D03               	skipz
   752  0356  2B51               	goto	u375
   753  0357  3001               	movlw	1
   754  0358  0293               	subwf	___lwdiv@counter,f
   755  0359  1D03               	btfss	3,2
   756  035A  2B3A               	goto	l774
   757  035B                     l784:	
   758  035B  0812               	movf	___lwdiv@quotient+1,w
   759  035C  008D               	movwf	?___lwdiv+1
   760  035D  0811               	movf	___lwdiv@quotient,w
   761  035E  008C               	movwf	?___lwdiv
   762  035F  0008               	return
   763  0360                     __end_of___lwdiv:	
   764                           
   765                           	psect	text5
   766  024C                     __ptext5:	
   767 ;; *************** function _Lcd_Write_String *****************
   768 ;; Defined at:
   769 ;;		line 107 in file "lcd.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  a               1    wreg     PTR unsigned char 
   772 ;;		 -> Lcd_Write_Int@temp(16), 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  a               1    8[BANK0 ] PTR unsigned char 
   775 ;;		 -> Lcd_Write_Int@temp(16), 
   776 ;;  i               2    6[BANK0 ] int 
   777 ;; Return value:  Size  Location     Type
   778 ;;		None               void
   779 ;; Registers used:
   780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0
   786 ;;      Params:         0       0
   787 ;;      Locals:         0       3
   788 ;;      Temps:          0       1
   789 ;;      Totals:         0       4
   790 ;;Total ram usage:        4 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    2
   793 ;; This function calls:
   794 ;;		_Lcd_Write_Char
   795 ;; This function is called by:
   796 ;;		_Lcd_Write_Int
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function _Lcd_Write_String
   802  024C                     _Lcd_Write_String:	
   803                           
   804                           ;incstack = 0
   805                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   806                           ;Lcd_Write_String@a stored from wreg
   807  024C  1283               	bcf	3,5	;RP0=0, select bank0
   808  024D  0094               	movwf	Lcd_Write_String@a
   809                           
   810                           ;lcd.c: 109: int i;
   811                           ;lcd.c: 110: for(i=0;a[i]!='\0';i++)
   812  024E  0192               	clrf	Lcd_Write_String@i
   813  024F  0193               	clrf	Lcd_Write_String@i+1
   814  0250                     l826:	
   815  0250  0812               	movf	Lcd_Write_String@i,w
   816  0251  0714               	addwf	Lcd_Write_String@a,w
   817  0252  0091               	movwf	??_Lcd_Write_String
   818  0253  0811               	movf	??_Lcd_Write_String,w
   819  0254  0084               	movwf	4
   820  0255  1383               	bcf	3,7	;select IRP bank0
   821  0256  0800               	movf	0,w
   822  0257  1903               	btfsc	3,2
   823  0258  0008               	return
   824                           
   825                           ;lcd.c: 111: {
   826                           ;lcd.c: 112: Lcd_Write_Char(a[i]);
   827  0259  0812               	movf	Lcd_Write_String@i,w
   828  025A  0714               	addwf	Lcd_Write_String@a,w
   829  025B  0091               	movwf	??_Lcd_Write_String
   830  025C  0811               	movf	??_Lcd_Write_String,w
   831  025D  0084               	movwf	4
   832  025E  1383               	bcf	3,7	;select IRP bank0
   833  025F  0800               	movf	0,w
   834  0260  2292               	fcall	_Lcd_Write_Char
   835  0261  3001               	movlw	1
   836  0262  1283               	bcf	3,5	;RP0=0, select bank0
   837  0263  0792               	addwf	Lcd_Write_String@i,f
   838  0264  1803               	skipnc
   839  0265  0A93               	incf	Lcd_Write_String@i+1,f
   840  0266  3000               	movlw	0
   841  0267  0793               	addwf	Lcd_Write_String@i+1,f
   842  0268  2A50               	goto	l826
   843  0269                     __end_of_Lcd_Write_String:	
   844                           
   845                           	psect	text6
   846  0292                     __ptext6:	
   847 ;; *************** function _Lcd_Write_Char *****************
   848 ;; Defined at:
   849 ;;		line 90 in file "lcd.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  a               1    wreg     unsigned char 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  a               1    4[BANK0 ] unsigned char 
   854 ;;  y               1    3[BANK0 ] unsigned char 
   855 ;;  temp            1    2[BANK0 ] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;		None               void
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0, pclath, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0
   865 ;;      Params:         0       0
   866 ;;      Locals:         0       3
   867 ;;      Temps:          0       1
   868 ;;      Totals:         0       4
   869 ;;Total ram usage:        4 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    1
   872 ;; This function calls:
   873 ;;		_Lcd_Port
   874 ;; This function is called by:
   875 ;;		_Lcd_Write_String
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           
   880                           ;psect for function _Lcd_Write_Char
   881  0292                     _Lcd_Write_Char:	
   882                           
   883                           ;incstack = 0
   884                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   885                           ;Lcd_Write_Char@a stored from wreg
   886  0292  1283               	bcf	3,5	;RP0=0, select bank0
   887  0293  0090               	movwf	Lcd_Write_Char@a
   888                           
   889                           ;lcd.c: 92: char temp,y;
   890                           ;lcd.c: 93: temp = a&0x0F;
   891  0294  0810               	movf	Lcd_Write_Char@a,w
   892  0295  390F               	andlw	15
   893  0296  008D               	movwf	??_Lcd_Write_Char
   894  0297  080D               	movf	??_Lcd_Write_Char,w
   895  0298  008E               	movwf	Lcd_Write_Char@temp
   896                           
   897                           ;lcd.c: 94: y = a&0xF0;
   898  0299  0810               	movf	Lcd_Write_Char@a,w
   899  029A  39F0               	andlw	240
   900  029B  008D               	movwf	??_Lcd_Write_Char
   901  029C  080D               	movf	??_Lcd_Write_Char,w
   902  029D  008F               	movwf	Lcd_Write_Char@y
   903                           
   904                           ;lcd.c: 95: RB4 = 1;
   905  029E  1606               	bsf	6,4	;volatile
   906                           
   907                           ;lcd.c: 96: Lcd_Port(y>>4);
   908  029F  080F               	movf	Lcd_Write_Char@y,w
   909  02A0  008D               	movwf	??_Lcd_Write_Char
   910  02A1  3004               	movlw	4
   911  02A2                     u315:	
   912  02A2  1003               	clrc
   913  02A3  0C8D               	rrf	??_Lcd_Write_Char,f
   914  02A4  3EFF               	addlw	-1
   915  02A5  1D03               	skipz
   916  02A6  2AA2               	goto	u315
   917  02A7  080D               	movf	??_Lcd_Write_Char,w
   918  02A8  2235               	fcall	_Lcd_Port
   919                           
   920                           ;lcd.c: 97: RB6 = 1;
   921  02A9  1283               	bcf	3,5	;RP0=0, select bank0
   922  02AA  1706               	bsf	6,6	;volatile
   923                           
   924                           ;lcd.c: 98: _delay((unsigned long)((40)*(4000000/4000000.0)));
   925  02AB  300D               	movlw	13
   926  02AC  008D               	movwf	??_Lcd_Write_Char
   927  02AD                     u547:	
   928  02AD  0B8D               	decfsz	??_Lcd_Write_Char,f
   929  02AE  2AAD               	goto	u547
   930                           
   931                           ;lcd.c: 99: RB6 = 0;
   932  02AF  1283               	bcf	3,5	;RP0=0, select bank0
   933  02B0  1306               	bcf	6,6	;volatile
   934                           
   935                           ;lcd.c: 100: Lcd_Port(temp);
   936  02B1  080E               	movf	Lcd_Write_Char@temp,w
   937  02B2  2235               	fcall	_Lcd_Port
   938                           
   939                           ;lcd.c: 101: RB6 = 1;
   940  02B3  1283               	bcf	3,5	;RP0=0, select bank0
   941  02B4  1706               	bsf	6,6	;volatile
   942                           
   943                           ;lcd.c: 102: _delay((unsigned long)((40)*(4000000/4000000.0)));
   944  02B5  300D               	movlw	13
   945  02B6  008D               	movwf	??_Lcd_Write_Char
   946  02B7                     u557:	
   947  02B7  0B8D               	decfsz	??_Lcd_Write_Char,f
   948  02B8  2AB7               	goto	u557
   949                           
   950                           ;lcd.c: 103: RB6 = 0;
   951  02B9  1283               	bcf	3,5	;RP0=0, select bank0
   952  02BA  1306               	bcf	6,6	;volatile
   953  02BB  0008               	return
   954  02BC                     __end_of_Lcd_Write_Char:	
   955                           
   956                           	psect	text7
   957  0360                     __ptext7:	
   958 ;; *************** function _Lcd_Set_Cursor *****************
   959 ;; Defined at:
   960 ;;		line 48 in file "lcd.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  a               1    wreg     unsigned char 
   963 ;;  b               1    4[BANK0 ] unsigned char 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  a               1    7[BANK0 ] unsigned char 
   966 ;;  temp            1   10[BANK0 ] unsigned char 
   967 ;;  y               1    9[BANK0 ] unsigned char 
   968 ;;  z               1    8[BANK0 ] unsigned char 
   969 ;; Return value:  Size  Location     Type
   970 ;;		None               void
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, pclath, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0
   978 ;;      Params:         0       1
   979 ;;      Locals:         0       4
   980 ;;      Temps:          0       2
   981 ;;      Totals:         0       7
   982 ;;Total ram usage:        7 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; Hardware stack levels required when called:    2
   985 ;; This function calls:
   986 ;;		_Lcd_Cmd
   987 ;; This function is called by:
   988 ;;		_main
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function _Lcd_Set_Cursor
   994  0360                     _Lcd_Set_Cursor:	
   995                           
   996                           ;incstack = 0
   997                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   998                           ;Lcd_Set_Cursor@a stored from wreg
   999  0360  1283               	bcf	3,5	;RP0=0, select bank0
  1000  0361  0093               	movwf	Lcd_Set_Cursor@a
  1001                           
  1002                           ;lcd.c: 50: char temp,z,y;
  1003                           ;lcd.c: 51: if(a == 1)
  1004  0362  0313               	decf	Lcd_Set_Cursor@a,w
  1005  0363  1D03               	btfss	3,2
  1006  0364  2B81               	goto	l878
  1007                           
  1008                           ;lcd.c: 52: {
  1009                           ;lcd.c: 53: temp = (char) (0x80 + b - 1);
  1010  0365  0810               	movf	Lcd_Set_Cursor@b,w
  1011  0366  3E7F               	addlw	127
  1012  0367  0091               	movwf	??_Lcd_Set_Cursor
  1013  0368  0811               	movf	??_Lcd_Set_Cursor,w
  1014  0369  0096               	movwf	Lcd_Set_Cursor@temp
  1015                           
  1016                           ;lcd.c: 54: z = temp>>4;
  1017  036A  0816               	movf	Lcd_Set_Cursor@temp,w
  1018  036B  0091               	movwf	??_Lcd_Set_Cursor
  1019  036C  3004               	movlw	4
  1020  036D                     u505:	
  1021  036D  1003               	clrc
  1022  036E  0C91               	rrf	??_Lcd_Set_Cursor,f
  1023  036F  3EFF               	addlw	-1
  1024  0370  1D03               	skipz
  1025  0371  2B6D               	goto	u505
  1026  0372  0811               	movf	??_Lcd_Set_Cursor,w
  1027  0373  0092               	movwf	??_Lcd_Set_Cursor+1
  1028  0374  0812               	movf	??_Lcd_Set_Cursor+1,w
  1029  0375  0094               	movwf	Lcd_Set_Cursor@z
  1030                           
  1031                           ;lcd.c: 55: y = temp & 0x0F;
  1032  0376  0816               	movf	Lcd_Set_Cursor@temp,w
  1033  0377  390F               	andlw	15
  1034  0378  0091               	movwf	??_Lcd_Set_Cursor
  1035  0379  0811               	movf	??_Lcd_Set_Cursor,w
  1036  037A  0095               	movwf	Lcd_Set_Cursor@y
  1037                           
  1038                           ;lcd.c: 56: Lcd_Cmd(z);
  1039  037B  0814               	movf	Lcd_Set_Cursor@z,w
  1040  037C  2222               	fcall	_Lcd_Cmd
  1041                           
  1042                           ;lcd.c: 57: Lcd_Cmd(y);
  1043  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1044  037E  0815               	movf	Lcd_Set_Cursor@y,w
  1045  037F  2222               	fcall	_Lcd_Cmd
  1046                           
  1047                           ;lcd.c: 58: }
  1048  0380  0008               	return
  1049  0381                     l878:	
  1050                           
  1051                           ;lcd.c: 59: else if(a == 2)
  1052  0381  3002               	movlw	2
  1053  0382  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0383  0613               	xorwf	Lcd_Set_Cursor@a,w
  1055  0384  1D03               	btfss	3,2
  1056  0385  0008               	return
  1057                           
  1058                           ;lcd.c: 60: {
  1059                           ;lcd.c: 61: temp = 0xC0 + b - 1;
  1060  0386  0810               	movf	Lcd_Set_Cursor@b,w
  1061  0387  3EBF               	addlw	191
  1062  0388  0091               	movwf	??_Lcd_Set_Cursor
  1063  0389  0811               	movf	??_Lcd_Set_Cursor,w
  1064  038A  0096               	movwf	Lcd_Set_Cursor@temp
  1065                           
  1066                           ;lcd.c: 62: z = temp>>4;
  1067  038B  0816               	movf	Lcd_Set_Cursor@temp,w
  1068  038C  0091               	movwf	??_Lcd_Set_Cursor
  1069  038D  3004               	movlw	4
  1070  038E                     u525:	
  1071  038E  1003               	clrc
  1072  038F  0C91               	rrf	??_Lcd_Set_Cursor,f
  1073  0390  3EFF               	addlw	-1
  1074  0391  1D03               	skipz
  1075  0392  2B8E               	goto	u525
  1076  0393  0811               	movf	??_Lcd_Set_Cursor,w
  1077  0394  0092               	movwf	??_Lcd_Set_Cursor+1
  1078  0395  0812               	movf	??_Lcd_Set_Cursor+1,w
  1079  0396  0094               	movwf	Lcd_Set_Cursor@z
  1080                           
  1081                           ;lcd.c: 63: y = temp & 0x0F;
  1082  0397  0816               	movf	Lcd_Set_Cursor@temp,w
  1083  0398  390F               	andlw	15
  1084  0399  0091               	movwf	??_Lcd_Set_Cursor
  1085  039A  0811               	movf	??_Lcd_Set_Cursor,w
  1086  039B  0095               	movwf	Lcd_Set_Cursor@y
  1087                           
  1088                           ;lcd.c: 64: Lcd_Cmd(z);
  1089  039C  0814               	movf	Lcd_Set_Cursor@z,w
  1090  039D  2222               	fcall	_Lcd_Cmd
  1091                           
  1092                           ;lcd.c: 65: Lcd_Cmd(y);
  1093  039E  1283               	bcf	3,5	;RP0=0, select bank0
  1094  039F  0815               	movf	Lcd_Set_Cursor@y,w
  1095  03A0  2222               	fcall	_Lcd_Cmd
  1096  03A1  0008               	return
  1097  03A2                     __end_of_Lcd_Set_Cursor:	
  1098                           
  1099                           	psect	text8
  1100  02EF                     __ptext8:	
  1101 ;; *************** function _Lcd_Init *****************
  1102 ;; Defined at:
  1103 ;;		line 70 in file "lcd.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;		None               void
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0, pclath, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0
  1117 ;;      Params:         0       0
  1118 ;;      Locals:         0       0
  1119 ;;      Temps:          0       2
  1120 ;;      Totals:         0       2
  1121 ;;Total ram usage:        2 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    2
  1124 ;; This function calls:
  1125 ;;		_Lcd_Cmd
  1126 ;;		_Lcd_Port
  1127 ;; This function is called by:
  1128 ;;		_main
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           
  1133                           ;psect for function _Lcd_Init
  1134  02EF                     _Lcd_Init:	
  1135                           
  1136                           ;lcd.c: 72: Lcd_Port(0x00);
  1137                           
  1138                           ;incstack = 0
  1139                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1140  02EF  3000               	movlw	0
  1141  02F0  2235               	fcall	_Lcd_Port
  1142                           
  1143                           ;lcd.c: 73: _delay((unsigned long)((20)*(4000000/4000.0)));
  1144  02F1  301A               	movlw	26
  1145  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1146  02F3  0091               	movwf	??_Lcd_Init+1
  1147  02F4  30F8               	movlw	248
  1148  02F5  0090               	movwf	??_Lcd_Init
  1149  02F6                     u567:	
  1150  02F6  0B90               	decfsz	??_Lcd_Init,f
  1151  02F7  2AF6               	goto	u567
  1152  02F8  0B91               	decfsz	??_Lcd_Init+1,f
  1153  02F9  2AF6               	goto	u567
  1154  02FA  0000               	nop
  1155                           
  1156                           ;lcd.c: 74: Lcd_Cmd(0x03);
  1157  02FB  3003               	movlw	3
  1158  02FC  2222               	fcall	_Lcd_Cmd
  1159                           
  1160                           ;lcd.c: 75: _delay((unsigned long)((5)*(4000000/4000.0)));
  1161  02FD  3007               	movlw	7
  1162  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1163  02FF  0091               	movwf	??_Lcd_Init+1
  1164  0300  307D               	movlw	125
  1165  0301  0090               	movwf	??_Lcd_Init
  1166  0302                     u577:	
  1167  0302  0B90               	decfsz	??_Lcd_Init,f
  1168  0303  2B02               	goto	u577
  1169  0304  0B91               	decfsz	??_Lcd_Init+1,f
  1170  0305  2B02               	goto	u577
  1171                           
  1172                           ;lcd.c: 76: Lcd_Cmd(0x03);
  1173  0306  3003               	movlw	3
  1174  0307  2222               	fcall	_Lcd_Cmd
  1175                           
  1176                           ;lcd.c: 77: _delay((unsigned long)((11)*(4000000/4000.0)));
  1177  0308  300F               	movlw	15
  1178  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1179  030A  0091               	movwf	??_Lcd_Init+1
  1180  030B  3047               	movlw	71
  1181  030C  0090               	movwf	??_Lcd_Init
  1182  030D                     u587:	
  1183  030D  0B90               	decfsz	??_Lcd_Init,f
  1184  030E  2B0D               	goto	u587
  1185  030F  0B91               	decfsz	??_Lcd_Init+1,f
  1186  0310  2B0D               	goto	u587
  1187  0311  2B12               	nop2
  1188                           
  1189                           ;lcd.c: 78: Lcd_Cmd(0x03);
  1190  0312  3003               	movlw	3
  1191  0313  2222               	fcall	_Lcd_Cmd
  1192                           
  1193                           ;lcd.c: 80: Lcd_Cmd(0x02);
  1194  0314  3002               	movlw	2
  1195  0315  2222               	fcall	_Lcd_Cmd
  1196                           
  1197                           ;lcd.c: 81: Lcd_Cmd(0x02);
  1198  0316  3002               	movlw	2
  1199  0317  2222               	fcall	_Lcd_Cmd
  1200                           
  1201                           ;lcd.c: 82: Lcd_Cmd(0x08);
  1202  0318  3008               	movlw	8
  1203  0319  2222               	fcall	_Lcd_Cmd
  1204                           
  1205                           ;lcd.c: 83: Lcd_Cmd(0x00);
  1206  031A  3000               	movlw	0
  1207  031B  2222               	fcall	_Lcd_Cmd
  1208                           
  1209                           ;lcd.c: 84: Lcd_Cmd(0x0C);
  1210  031C  300C               	movlw	12
  1211  031D  2222               	fcall	_Lcd_Cmd
  1212                           
  1213                           ;lcd.c: 85: Lcd_Cmd(0x00);
  1214  031E  3000               	movlw	0
  1215  031F  2222               	fcall	_Lcd_Cmd
  1216                           
  1217                           ;lcd.c: 86: Lcd_Cmd(0x06);
  1218  0320  3006               	movlw	6
  1219  0321  2222               	fcall	_Lcd_Cmd
  1220  0322  0008               	return
  1221  0323                     __end_of_Lcd_Init:	
  1222                           
  1223                           	psect	text9
  1224  0222                     __ptext9:	
  1225 ;; *************** function _Lcd_Cmd *****************
  1226 ;; Defined at:
  1227 ;;		line 30 in file "lcd.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  a               1    wreg     unsigned char 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  a               1    3[BANK0 ] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;		None               void
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0, pclath, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0
  1241 ;;      Params:         0       0
  1242 ;;      Locals:         0       1
  1243 ;;      Temps:          0       2
  1244 ;;      Totals:         0       3
  1245 ;;Total ram usage:        3 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    1
  1248 ;; This function calls:
  1249 ;;		_Lcd_Port
  1250 ;; This function is called by:
  1251 ;;		_Lcd_Set_Cursor
  1252 ;;		_Lcd_Init
  1253 ;;		_Lcd_Clear
  1254 ;;		_Lcd_Shift_Right
  1255 ;;		_Lcd_Shift_Left
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           
  1260                           ;psect for function _Lcd_Cmd
  1261  0222                     _Lcd_Cmd:	
  1262                           
  1263                           ;incstack = 0
  1264                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1265                           ;Lcd_Cmd@a stored from wreg
  1266  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0223  008F               	movwf	Lcd_Cmd@a
  1268                           
  1269                           ;lcd.c: 32: RB4 = 0;
  1270  0224  1206               	bcf	6,4	;volatile
  1271                           
  1272                           ;lcd.c: 33: Lcd_Port(a);
  1273  0225  080F               	movf	Lcd_Cmd@a,w
  1274  0226  2235               	fcall	_Lcd_Port
  1275                           
  1276                           ;lcd.c: 34: RB6 = 1;
  1277  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0228  1706               	bsf	6,6	;volatile
  1279                           
  1280                           ;lcd.c: 35: _delay((unsigned long)((4)*(4000000/4000.0)));
  1281  0229  3006               	movlw	6
  1282  022A  008E               	movwf	??_Lcd_Cmd+1
  1283  022B  3030               	movlw	48
  1284  022C  008D               	movwf	??_Lcd_Cmd
  1285  022D                     u597:	
  1286  022D  0B8D               	decfsz	??_Lcd_Cmd,f
  1287  022E  2A2D               	goto	u597
  1288  022F  0B8E               	decfsz	??_Lcd_Cmd+1,f
  1289  0230  2A2D               	goto	u597
  1290  0231  0000               	nop
  1291                           
  1292                           ;lcd.c: 36: RB6 = 0;
  1293  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0233  1306               	bcf	6,6	;volatile
  1295  0234  0008               	return
  1296  0235                     __end_of_Lcd_Cmd:	
  1297                           
  1298                           	psect	text10
  1299  0235                     __ptext10:	
  1300 ;; *************** function _Lcd_Port *****************
  1301 ;; Defined at:
  1302 ;;		line 6 in file "lcd.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  a               1    wreg     unsigned char 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  a               1    0[BANK0 ] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;		None               void
  1309 ;; Registers used:
  1310 ;;		wreg
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0
  1316 ;;      Params:         0       0
  1317 ;;      Locals:         0       1
  1318 ;;      Temps:          0       0
  1319 ;;      Totals:         0       1
  1320 ;;Total ram usage:        1 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_Lcd_Cmd
  1326 ;;		_Lcd_Init
  1327 ;;		_Lcd_Write_Char
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           
  1332                           ;psect for function _Lcd_Port
  1333  0235                     _Lcd_Port:	
  1334                           
  1335                           ;incstack = 0
  1336                           ; Regs used in _Lcd_Port: [wreg]
  1337                           ;Lcd_Port@a stored from wreg
  1338  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0236  008C               	movwf	Lcd_Port@a
  1340                           
  1341                           ;lcd.c: 8: if(a & 1)
  1342  0237  1C0C               	btfss	Lcd_Port@a,0
  1343  0238  2A3B               	goto	l37
  1344                           
  1345                           ;lcd.c: 9: RB0 = 1;
  1346  0239  1406               	bsf	6,0	;volatile
  1347  023A  2A3C               	goto	l38
  1348  023B                     l37:	
  1349                           
  1350                           ;lcd.c: 10: else
  1351                           ;lcd.c: 11: RB0 = 0;
  1352  023B  1006               	bcf	6,0	;volatile
  1353  023C                     l38:	
  1354                           
  1355                           ;lcd.c: 13: if(a & 2)
  1356  023C  1C8C               	btfss	Lcd_Port@a,1
  1357  023D  2A40               	goto	l39
  1358                           
  1359                           ;lcd.c: 14: RB1 = 1;
  1360  023E  1486               	bsf	6,1	;volatile
  1361  023F  2A41               	goto	l40
  1362  0240                     l39:	
  1363                           
  1364                           ;lcd.c: 15: else
  1365                           ;lcd.c: 16: RB1 = 0;
  1366  0240  1086               	bcf	6,1	;volatile
  1367  0241                     l40:	
  1368                           
  1369                           ;lcd.c: 18: if(a & 4)
  1370  0241  1D0C               	btfss	Lcd_Port@a,2
  1371  0242  2A45               	goto	l41
  1372                           
  1373                           ;lcd.c: 19: RB2 = 1;
  1374  0243  1506               	bsf	6,2	;volatile
  1375  0244  2A46               	goto	l42
  1376  0245                     l41:	
  1377                           
  1378                           ;lcd.c: 20: else
  1379                           ;lcd.c: 21: RB2 = 0;
  1380  0245  1106               	bcf	6,2	;volatile
  1381  0246                     l42:	
  1382                           
  1383                           ;lcd.c: 23: if(a & 8)
  1384  0246  1D8C               	btfss	Lcd_Port@a,3
  1385  0247  2A4A               	goto	l43
  1386                           
  1387                           ;lcd.c: 24: RB3 = 1;
  1388  0248  1586               	bsf	6,3	;volatile
  1389  0249  0008               	return
  1390  024A                     l43:	
  1391                           
  1392                           ;lcd.c: 25: else
  1393                           ;lcd.c: 26: RB3 = 0;
  1394  024A  1186               	bcf	6,3	;volatile
  1395  024B  0008               	return
  1396  024C                     __end_of_Lcd_Port:	
  1397  004E                     btemp	set	78	;btemp
  1398  004E                     wtemp	set	78
  1399  004E                     wtemp0	set	78
  1400  0050                     wtemp1	set	80
  1401  0052                     wtemp2	set	82
  1402  0054                     wtemp3	set	84
  1403  0056                     wtemp4	set	86
  1404  0058                     wtemp5	set	88
  1405  004F                     wtemp6	set	79
  1406  004E                     ttemp	set	78
  1407  004E                     ttemp0	set	78
  1408  0051                     ttemp1	set	81
  1409  0054                     ttemp2	set	84
  1410  0057                     ttemp3	set	87
  1411  004F                     ttemp4	set	79
  1412  004E                     ltemp	set	78
  1413  004E                     ltemp0	set	78
  1414  0052                     ltemp1	set	82
  1415  0056                     ltemp2	set	86
  1416  0050                     ltemp3	set	80


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     40      40

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 16
		 -> Lcd_Write_Int@temp(BANK0[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    sp__utoa	PTR unsigned char  size(1) Largest target is 16
		 -> Lcd_Write_Int@temp(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> Lcd_Write_Int@temp(BANK0[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Write_Int
    _Lcd_Write_Int->_utoa
    _utoa->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2256
                                             35 BANK0      5     5      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                      _Lcd_Write_Int
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Int                                       18    16      2    1601
                                             17 BANK0     18    16      2
                   _Lcd_Write_String
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1181
                                              8 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     374
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     295
                                              5 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     433
                                              4 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Int
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42     28      28       3       60.6%
ABS                  0      0       0       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Apr 11 15:31:06 2016

              __CFG_CP$OFF 0000                         l40 0241                         l41 0245  
                       l42 0246                         l43 024A                         l37 023B  
                       l38 023C                         l39 0240                        l429 03E8  
                      l802 02DF                        l806 02EA                        l830 03A8  
                      l840 03C4                        l826 0250                        l780 0350  
                      l772 032C                        l774 033A                        l784 035B  
                      l796 02C3                        l878 0381                        l798 02D1  
                      l896 0271                        _RB0 0030                        _RB1 0031  
                      _RB2 0032                        _RB3 0033                        _RB4 0034  
                      _RB5 0035                        _RB6 0036                        u315 02A2  
                      u405 02C6                        u335 032F                        u505 036D  
                      u425 02D7                        u355 033B                        u435 02E0  
                      u525 038E                        u365 0347                        u375 0351  
                      u537 0283                        u547 02AD                        u557 02B7  
                      u567 02F6                        u577 0302                        u587 030D  
                      u597 022D                        fsr0 0004                        indf 0000  
             __CFG_FOSC$XT 0000                main@counter 0032          ?_Lcd_Write_String 000C  
                     _main 0269                       btemp 004E                       _utoa 03A2  
                     ltemp 004E                       start 0000                       ttemp 004E  
       ??_Lcd_Write_String 0011                       wtemp 004E            __end_of_Lcd_Cmd 0235  
                    ?_main 000C              __CFG_WDTE$OFF 0000                      ?_utoa 0014  
          __end_of___lwdiv 0360            __end_of___lwmod 02EF    __size_of_Lcd_Set_Cursor 0042  
                    _TRISB 0086              __CFG_PWRTE$ON 0000                      ltemp0 004E  
                    ltemp1 0052                      ltemp2 0056                      ltemp3 0050  
                    ttemp0 004E                      ttemp1 0051                      ttemp2 0054  
                    ttemp3 0057                      ttemp4 004F                      utoa@c 001B  
                    utoa@v 0019                      status 0003                      wtemp0 004E  
                    wtemp1 0050                      wtemp2 0052                      wtemp3 0054  
                    wtemp4 0056                      wtemp5 0058                      wtemp6 004F  
         __end_of_Lcd_Init 0323           __end_of_Lcd_Port 024C            __initialization 03FE  
             __end_of_main 0292               __end_of_utoa 03FE                     ??_main 002F  
                   ??_utoa 0018                  ??_Lcd_Cmd 000D    __size_of_Lcd_Write_Char 002A  
                ??___lwdiv 0010                  ??___lwmod 0010      __end_of_Lcd_Write_Int 0222  
          Lcd_Set_Cursor@a 0013            Lcd_Set_Cursor@b 0010            Lcd_Set_Cursor@y 0015  
          Lcd_Set_Cursor@z 0014    __end_of__initialization 03FE             __pcstackCOMMON 0000  
           _Lcd_Set_Cursor 0360                  ?_Lcd_Init 000C                  ?_Lcd_Port 000C  
           Lcd_Write_Int@a 001D                 __pmaintext 0269  __size_of_Lcd_Write_String 001D  
   __end_of_Lcd_Set_Cursor 03A2                 ??_Lcd_Init 0010                 ??_Lcd_Port 0000  
           _Lcd_Write_Char 0292                    _Lcd_Cmd 0222                    ___lwdiv 0323  
                  ___lwmod 02BC            ?_Lcd_Set_Cursor 0010                    __ptext1 0214  
                  __ptext2 03A2                    __ptext3 02BC                    __ptext4 0323  
                  __ptext5 024C                    __ptext6 0292                    __ptext7 0360  
                  __ptext8 02EF                    __ptext9 0222     __end_of_Lcd_Write_Char 02BC  
     end_of_initialization 03FE                  Lcd_Port@a 000C                    utoa@buf 001C  
        Lcd_Write_Int@temp 001F                    utoa@val 0014            ?_Lcd_Write_Char 000C  
        Lcd_Write_String@a 0014          Lcd_Write_String@i 0012           _Lcd_Write_String 024C  
      start_initialization 03FE          __size_of_Lcd_Init 0034          __size_of_Lcd_Port 0017  
   __size_of_Lcd_Write_Int 000E            Lcd_Write_Char@a 0010            Lcd_Write_Char@y 000F  
                ___latbits 0000              __pcstackBANK0 000C                   ?_Lcd_Cmd 000C  
         ___lwdiv@dividend 000E           ??_Lcd_Set_Cursor 0011                   ?___lwdiv 000C  
                 ?___lwmod 000C              _Lcd_Write_Int 0214           ___lwdiv@quotient 0011  
                 Lcd_Cmd@a 000F             ?_Lcd_Write_Int 001D           ??_Lcd_Write_Char 000D  
                 _Lcd_Init 02EF                   _Lcd_Port 0235   __end_of_Lcd_Write_String 0269  
         __size_of_Lcd_Cmd 0013           __size_of___lwdiv 003D           __size_of___lwmod 0033  
          ___lwdiv@divisor 000C            ___lwdiv@counter 0013                   __ptext10 0235  
            __size_of_main 0029              __size_of_utoa 005C            ??_Lcd_Write_Int 0000  
       Lcd_Write_Char@temp 000E           ___lwmod@dividend 000E         Lcd_Set_Cursor@temp 0016  
                 utoa@base 0016            ___lwmod@divisor 000C            ___lwmod@counter 0011  
